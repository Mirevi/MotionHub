digraph "OTTracker"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{OTTracker\n|- m_refData\l- szMyIPAddress\l- szServerIPAddress\l- m_client\l- analogSamplesPerMocapFrame\l- iConnectionType\l|+ OTTracker()\l+ OTTracker()\l+ ~OTTracker()\l+ start()\l+ stop()\l+ destroy()\l- createClient()\l- init()\l- update()\l- track()\l- extractSkeleton()\l- parseSkeleton()\l- cleanSkeletonPool()\l- convertOptiTrackRotation()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Manages OptiTrack Body Tracking via NatNet protocol."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Tracker\n|# m_isDataAvailable\l# m_hasSkeletonPoolChanged\l# m_trackingThread\l# m_skeletonPool\l# m_skeletonPoolCache\l# m_idCam\l# m_trackingCycles\l# m_offsetMatrix\l# m_skeletonPoolLock\l|+ Tracker()\l+ start()\l+ stop()\l+ destroy()\l+ disable()\l+ enable()\l+ clean()\l+ isDataAvailable()\l+ resetIsDataAvailable()\l+ hasSkeletonPoolChanged()\land 9 more...\l# init()\l# update()\l# track()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tracker.html",tooltip="Prototype class for implemetation - holds virtual methods."];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #m_properties" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{Tracker::Properties\n|+ id\l+ name\l+ isTracking\l+ isEnabled\l+ countDetectedSkeleton\l+ positionOffset\l+ rotationOffset\l+ scaleOffset\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_tracker_1_1_properties.html",tooltip=" "];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_dataHandlerManager" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{DataHandlerManager\n|- m_data\l- m_isDataAvailable\l|+ DataHandlerManager()\l+ getData()\l+ isDataAvailable()\l+ DataHandler()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_data_handler_manager.html",tooltip="helper class for DataHandler method callback"];
  Node3 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -m_properties" ,arrowhead="odiamond",fontname="Helvetica"];
}
