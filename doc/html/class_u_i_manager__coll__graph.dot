digraph "UIManager"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{UIManager\n|- m_app\l|+ UIManager()\l+ getMainWindow()\l+ processInput()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -m_mainWindow" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{MainWindow\n|- ui\l- m_hirachyItemPool\l- m_isTracking\l- m_isInspectorInit\l- m_selectedTrackerInList\l- m_inputFieldPool\l|+ MainWindow()\l+ ~MainWindow()\l+ update()\l+ updateConsole()\l+ getOglRenderer()\l- updateHirachy()\l- drawInspector()\l- updateInspector()\l- clearInspector()\l- addRowToInspector()\l- toggleTrackingButtons()\l- toQString()\l- slotToggleTracking()\l- slotAddTracker()\l- slotRemoveTracker()\l- on_actionExit_triggered()\l- slotSelectTracker()\l- slotInspectorItemChanged()\l- slotInspectorInputPosX()\l- slotInspectorInputPosY()\l- slotInspectorInputPosZ()\l- slotInspectorInputRotX()\l- slotInspectorInputRotY()\l- slotInspectorInputRotZ()\l- slotInspectorInputScaleX()\l- slotInspectorInputScaleY()\l- slotInspectorInputScaleZ()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_main_window.html",tooltip="Qt main Window wrapper containing slot methods."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{QMainWindow\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -m_oglRenderer" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{GlWidget\n|- m_worldMatrix\l- m_shaderProgram_texture\l- m_shaderProgram_confidence\l- lastPos\l- m_clearColor\l- m_skeletonMeshPool\l|+ GlWidget()\l+ ~GlWidget()\l+ updateSkeletonMeshPoolSize()\l+ updateSkeletonMeshCount()\l+ updateSkeletonMeshTransform()\l# initializeGL()\l# paintGL()\l# resizeGL()\l# mousePressEvent()\l# mouseMoveEvent()\l# mouseReleaseEvent()\l- init()\l- createShaderProgram()\l- createMeshes()\l- renderMesh()\l- renderSkeletonMesh()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_gl_widget.html",tooltip=" "];
  Node5 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{QOpenGLWidget\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node4 [dir="back",color="darkgreen",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{QOpenGLFunctions\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -m_refTrackerManager" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{TrackerManager\n|- m_trackerPool\l- m_isTracking\l- m_hasTrackerPoolChanged\l- m_nextFreeTrackerID\l- m_nextFreeAKCamID\l- m_trackerPoolLock\l|+ TrackerManager()\l+ createTracker()\l+ removeTrackerAt()\l+ startTracker()\l+ stopTracker()\l+ isTracking()\l+ hasTrackerPoolChanged()\l+ getPoolTracker()\l+ getTrackerRefAt()\l+ getTrackerPoolLock()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tracker_manager.html",tooltip="Manager for all types of tracker."];
  Node8 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -m_camera" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{Camera\n||+ Camera()\l+ ~Camera()\l+ addRotation()\l+ rotate()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_camera.html",tooltip=" "];
  Node9 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node9 [label="{Entity\n|# m_matrix\l|+ Entity()\l+ ~Entity()\l+ getMatrix()\l+ translate()\l+ setPosition()\l+ getPosition()\l+ rotate()\l+ setRotation()\l+ getRotation()\l+ scale()\l+ scale()\l+ setScale()\l+ setScale()\l+ getScale()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_entity.html",tooltip=" "];
  Node10 -> Node8 [color="grey25",fontsize="10",style="solid",label=" -m_rotation" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{Vector3\n||+ Vector3()\l+ Vector3()\l+ Vector3()\l+ Vector3()\l+ Vector3()\l+ operator+()\l+ operator-()\l+ operator*()\l+ operator/()\l+ operator*()\l+ operator*()\l+ toString()\l+ toEigen()\l+ zero()\l+ one()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_vector3.html",tooltip="Utility Class."];
  Node11 -> Node10 [color="grey25",fontsize="10",style="solid",label=" +m_xyz" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{Vector3::Position\n|+ x\l+ y\l+ z\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_vector3_1_1_position.html",tooltip=" "];
  Node10 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -m_colorRed\n-m_colorGreen\n-m_colorYellow" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -m_meshGrid" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 [label="{Plane\n||+ Plane()\l+ ~Plane()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_plane.html",tooltip=" "];
  Node13 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node13 [label="{Mesh\n|# m_vertexData\l# m_faceCount\l# m_vbo\l# m_texture\l# m_shaderProgram\l# m_isActive\l|+ Mesh()\l+ ~Mesh()\l+ bind()\l+ release()\l+ getFaceCount()\l+ isActive()\l+ setActive()\l+ setDiffuseColor()\l# init()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_mesh.html",tooltip=" "];
  Node9 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node10 -> Node13 [color="grey25",fontsize="10",style="solid",label=" #m_diffuseColor" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -m_refTrackerManager" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -m_selectedTracker" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 [label="{Tracker\n|# m_isDataAvailable\l# m_hasSkeletonPoolChanged\l# m_trackingThread\l# m_skeletonPool\l# m_skeletonPoolCache\l# m_idCam\l# m_trackingCycles\l# m_offsetMatrix\l# m_skeletonPoolLock\l|+ Tracker()\l+ start()\l+ stop()\l+ destroy()\l+ disable()\l+ enable()\l+ clean()\l+ isDataAvailable()\l+ resetIsDataAvailable()\l+ hasSkeletonPoolChanged()\land 9 more...\l# init()\l# update()\l# track()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_tracker.html",tooltip="Prototype class for implemetation - holds virtual methods."];
  Node15 -> Node14 [color="grey25",fontsize="10",style="solid",label=" #m_properties" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 [label="{Tracker::Properties\n|+ id\l+ name\l+ isTracking\l+ isEnabled\l+ countDetectedSkeleton\l+ positionOffset\l+ rotationOffset\l+ scaleOffset\l|}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$struct_tracker_1_1_properties.html",tooltip=" "];
  Node16 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -m_createTrackerWindow" ,arrowhead="odiamond",fontname="Helvetica"];
  Node16 [label="{CreateTrackerWindow\n|- ui\l- m_refListWidgetTracker\l- m_selectedTrackerIdInDropdown\l|+ CreateTrackerWindow()\l+ ~CreateTrackerWindow()\l- slotCreateTracker()\l- slotSelectTrackerInDropdown()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_create_tracker_window.html",tooltip="dialog for creating new trackers"];
  Node17 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node17 [label="{QDialog\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node16 [color="grey25",fontsize="10",style="solid",label=" -m_refTrackerManager" ,arrowhead="odiamond",fontname="Helvetica"];
}
